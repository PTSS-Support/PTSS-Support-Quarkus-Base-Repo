name: ðŸš€ Deploy to Development

on:
  push:
    branches: [ development ]
  workflow_dispatch:  # Manual trigger
    inputs:
      tag:
        description: 'Image tag (optional)'
        required: false
        default: 'latest'

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: actions/checkout@v3
      
      - name: Generate Version Tag
        id: generate_tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.event.inputs.tag }}" != "latest" ]; then
            echo "version=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "version=$(date +'%Y%m%d')-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          fi
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Set Repository Name
        id: repo_name
        run: |
          echo "name=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
      
      - name: Build and Push Docker Image
        run: |
          docker build -t ghcr.io/${{ steps.repo_name.outputs.name }}:${{ steps.generate_tag.outputs.version }} .
          docker push ghcr.io/${{ steps.repo_name.outputs.name }}:${{ steps.generate_tag.outputs.version }}
      
      - name: Install OpenShift CLI
        run: |
          curl -LO https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz
          tar -xvf openshift-client-linux.tar.gz -C /usr/local/bin
          chmod +x /usr/local/bin/oc
      
      - name: Deploy to OpenShift Dev
        run: |
          oc login --token=${{ secrets.OSC_TOKEN }} --server=${{ secrets.OSC_SERVER }}
          oc project ${{ secrets.OSC_DEV_PROJECT }}
          
          # Create/update deployment
          oc set image deployment/${{ github.event.repository.name }} \
            ${{ github.event.repository.name }}=ghcr.io/${{ github.repository }}:${{ steps.generate_tag.outputs.version }}
          
          # Rollout and wait for deployment
          oc rollout status deployment/${{ github.event.repository.name }} --timeout=180s

      - name: Run E2E Tests
        run: |
          echo "TODO: Add E2E tests using your preferred testing framework"
          echo "These tests should run against the newly deployed dev environment"
  
      - name: Performance Tests (Basic)
        run: |
          echo "TODO: Add basic k6 performance tests against dev environment"
          echo "More extensive performance testing will be done in production deployment"